import asyncio
import uuid
import json

from database import async_session_maker

from questions.models import Category, Question, Prompt, Option

first_id = uuid.uuid4()
second_id = uuid.uuid4()
third_id = uuid.uuid4()
fourth_id = uuid.uuid4()
fifth_id = uuid.uuid4()

obshalka_id = uuid.uuid4()
translator_id = uuid.uuid4()
adecvater_id = uuid.uuid4()
luchi_id = uuid.uuid4()
otezd_id = uuid.uuid4()
prss_relise = uuid.uuid4()
comments_id = uuid.uuid4()
statyi_id = uuid.uuid4()
anticrisis_comments_id = uuid.uuid4()
rewrite_id = uuid.uuid4()
public_speech_id = uuid.uuid4()
plan_statyi_id = uuid.uuid4()

files = {obshalka_id: '1.1 –û–±—â–∞–ª–∫–∞ –°–ê–òÃÜ–¢-2.txt',
         translator_id: '1.2 –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –°–ê–òÃÜ–¢-2.txt',
         adecvater_id: '1.3 –ê–¥–µ–∫–≤–∞—Ç–∏–∑–∞—Ç–æ—Ä –°–ê–òÃÜ–¢-2.txt',
         luchi_id: '1.4 –õ—É—á–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –°–ê–òÃÜ–¢-2.txt',
         otezd_id: '1.5 –ì—Ä–∞–º–æ—Ç–Ω–∞—è –æ—Ç—ä–µ–∑–¥ –°–ê–òÃÜ–¢.txt',
         prss_relise: '2.1 –ü—Ä–µ—Å—Å-—Ä–µ–ª–∏–∑—ã –°–ê–òÃÜ–¢.txt',
         comments_id: '2.2 –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –°–ú–ò –°–ê–òÃÜ–¢.txt',
         statyi_id: '2.4 –°—Ç–∞—Ç—å–∏ –ë–ï–¢–ê-–¢–ï–°–¢ –°–ê–òÃÜ–¢.txt',
         plan_statyi_id: '2.5 –ü–ª–∞–Ω —Å—Ç–∞—Ç—å–∏ –°–ê–òÃÜ–¢.txt',
         rewrite_id: '2.6 –†–µ—Ä–∞–∏ÃÜ—Ç—ã –°–ê–òÃÜ–¢.txt',
         anticrisis_comments_id: '2_3_–ê–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω—ã–µ_–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏_–°–ú–ò_–°–ê–òÃÜ–¢.txt',
         public_speech_id: '2_7_–ü—É–±–ª–∏—á–Ω—ã–µ_—Ä–µ—á–∏_–¥–ª—è_—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞_–°–ê–òÃÜ–¢.txt'}


async def add_category(session, category_id):
    with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/' + files[category_id]) as f:
        data = json.load(f)

    questions = data['questions']
    question_models = []
    options = []
    for i, q in enumerate(questions):
        question_models.append(Question(id=(question_id := uuid.uuid4()),
                                        is_required=(req := not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')),
                                        question_text=q['question'] if req else q['question'][13:],
                                        category_id=category_id, order_index=str(i), snippet=q.get('snippet'),
                                        type_=q['type']))
        if q['type'] == 'options':
            options.extend([Option(id=option['id'], question_id=question_id, option_text=option['text'],
                                   text_to_prompt=option['prompt_text']) for option in q['options']])

    prompt_texts = data['prompt'][1:]
    session.add_all(question_models)
    await session.flush()
    if options != []:
        session.add_all(options)
    session.add_all(
        [Prompt(id=uuid.uuid4(), category_id=category_id, text=prompt_text, order_index=str(i)) for i, prompt_text in
         enumerate(prompt_texts)])


async def main():
    async with async_session_maker.begin() as session:

        session.add(Category(id=first_id,
                             title='–û–±—â–µ—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ üôÇ',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1',
                             description='–ó–∞ –¥–æ—Å—Ç—É–ø –∫ –≤—ã—Å–æ–∫–∏–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º –Ω–µ –≤—Å–µ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–ª–∞—Ç–∏—Ç—å! –¢–µ–º –±–æ–ª–µ–µ, –µ—Å–ª–∏ –≤—ã —Ç–æ–ª—å–∫–æ –∑–Ω–∞–∫–æ–º–∏—Ç–µ—Å—å —Å –Ω–µ–π—Ä–æ–Ω–Ω—ã–º–∏ —Å–µ—Ç—è–º–∏ –∏ —Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∏—Ç—å –∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ò–ò –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–û–±—â–∞–ª–∫–∞¬ª, –∑–∞–∫–∏–Ω—å—Ç–µ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç –≤ ¬´–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫¬ª –∏–ª–∏ –∑–∞–π–¥–∏—Ç–µ –≤ —à—É—Ç–æ—á–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Å –æ—Ç–º–∞–∑–∫–∞–º–∏ –∏–ª–∏ –ª—É—á–∞–º–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.'))
        await session.flush()
        session.add(Category(id=obshalka_id,
                             title='–û–±—â–∞–ª–∫–∞',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1.1',
                             description='–í ¬´–û–±—â–∞–ª–∫–µ¬ª –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å. –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è –∏–∑ –ü–∏—Ç–µ—Ä–∞ –≤ –ö–∞–∑–∞–Ω—å –±–µ–∑ —Å–∞–º–æ–ª–µ—Ç–æ–≤ –∏ –ø–æ–µ–∑–¥–æ–≤. –ö–∞–∫ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å 3—Ö –¥–Ω–µ–≤–Ω—É—é –ø–æ–µ–∑–¥–∫—É –≤ –°—Ç–∞–º–±—É–ª —Ç–∞–∫, —á—Ç–æ–±—ã –Ω–µ —É–ø—É—Å—Ç–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π –¥–æ—Å—Ç–æ–ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏. –í —á–µ–º —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –º–∞—à–∏–Ω–∞–º–∏ Volkswagen Touareg –∏ Skoda Kodiak, –∏ –∫–∞–∫–∞—è –∏–∑ –Ω–∏—Ö –ª—É—á—à–µ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –∂–∏–∑–Ω–∏ –≤ –ø—Ä–∏–≥–æ—Ä–æ–¥–µ –º–µ–≥–∞–ø–æ–ª–∏—Å–∞? –ö–∞–∫ –Ω–∞—É—á–∏—Ç—å—Å—è –ø–ª–∞–≤–∞—Ç—å –∫—Ä–æ–ª–µ–º ‚Äì —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –ø–ª–∞–Ω–æ–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫? –í–æ–ø—Ä–æ—Å—ã ‚Äì –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã –ª–∏—à—å –≤–∞—à–µ–π —Ñ–∞–Ω—Ç–∞–∑–∏–µ–π\n–ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, —É—á—Ç–∏—Ç–µ, —á—Ç–æ –Ω–∞—à –ò–ò —Å–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ ¬´–≤–æ–ø—Ä–æ—Å-–æ—Ç–≤–µ—Ç¬ª, –∏ –Ω–µ –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–∏–∞–ª–æ–≥–∞, –∞ —Ç–∞–∫–∂–µ –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–∏—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö –∏ —Ü–µ–Ω–∞—Ö. –ó–∞—Ç–æ —É–º–Ω—ã–π ‚Äì —Å–∏–ª –Ω–µ—Ç )',
                             parent_id=first_id))
        session.add(Category(id=translator_id,
                             title='–ü–µ—Ä–µ–≤–æ–¥—á–∏–∫',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1.2',
                             description='–ü–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç—ã —Å –ª—é–±—ã—Ö —è–∑—ã–∫–æ–≤! –° —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π? –õ–µ–≥–∫–æ! –° –∏—Å–ø–∞–Ω—Å–∫–æ–≥–æ –Ω–∞ —Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π? –¢–æ–∂–µ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω–æ  –ê —Å –ø–æ–º–æ—â—å—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Ö—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏–ª–∏ –¥–µ–ª–æ–≤–æ–π –ø–µ—Ä–µ–ø–∏—Å–∫–∏ ‚Äì –≤—ã —Å–º–æ–∂–µ—Ç–µ –±–æ–ª–µ–µ —á–µ—Ç–∫–æ –≤—ã–±—Ä–∞—Ç—å –∂–µ–ª–∞–µ–º—ã–π –æ–±—Ä–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞.\n–ò –ø–æ–º–Ω–∏—Ç–µ ‚Äì –µ—Å–ª–∏ –ø–µ—Ä–≤–∞—è –≤–µ—Ä—Å–∏—è —Ç–µ–∫—Å—Ç–∞ –≤–∞—Å –Ω–µ —É—Å—Ç—Ä–æ–∏–ª–∞ ‚Äì —Å–º–µ–ª–æ –ø–æ–≤—Ç–æ—Ä—è–π—Ç–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –û–±—ã—á–Ω–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è 2-4 –Ω–∞–∂–∞—Ç–∏—è. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–π ‚Äì –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ )',
                             parent_id=first_id))
        session.add(Category(id=adecvater_id,
                             title='–ê–¥–µ–∫–≤–∞—Ç–µ–∑–∞—Ç–æ—Ä',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1.3',
                             description='–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ —Ç–µ–∫—Å—Ç, –æ—Ç –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–∫—Ä–∏–ø—è—Ç –∑—É–±—ã? –ö–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –ø–µ—Ä–µ–ø–∏–ª —Å–º—É–∑–∏ –∏ —Ç–µ–∫—Å—Ç –ø–æ–ª—É—á–∏–ª—Å—è –∏–∑–ª–∏—à–Ω–µ –≤–∞–Ω–∏–ª—å–Ω—ã–º? –ê–¥–µ–∫–≤–∞—Ç–∏–∑–∞—Ç–æ—Ä –ø–æ–ø—Ä–æ–±—É–µ—Ç —Å–¥–µ–ª–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª‚Ä¶ –±–æ–ª–µ–µ –∞–¥–µ–∫–≤–∞—Ç–Ω—ã–º  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É–∫–∞–∑–∞–Ω–∏—è ‚Äì —á—Ç–æ –Ω–∞ –≤—ã—Ö–æ–¥–µ —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–ª—è –≤–Ω—É—Ç—Ä–∏–∫–æ–º–∞, –∏–ª–∏ –¥–ª—è –ª–∏—Å—Ç–æ–≤–æ–∫ –≤ –º–∞–≥–∞–∑–∏–Ω–µ ‚Äì –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–ø—Ä–æ—Å—è—Ç –∑–∞–¥–∞—á—É –ò–ò.',
                             parent_id=first_id))
        session.add(Category(id=luchi_id,
                             title='–õ—É—á–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1.4',
                             description='–ü—Ä–æ–±–ª–µ–º—ã –Ω–∞ —Ä–∞–±–æ—Ç–µ? –í—Å–µ –Ω–∞–¥–æ–µ–ª–∏? –ö–æ—Ç —Å—ä–µ–ª –ª—é–±–∏–º—ã–π —Ü–≤–µ—Ç–æ–∫ –∏ —Ä–∞–∑–¥—Ä–∞–∫–æ–Ω–∏–ª –æ–±–æ–∏?\n–Ω–∞–º –∏–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞! –ü—Ä–æ—Å—Ç–æ –≤–±–µ–π—Ç–µ –∏–º—è, –∏ ¬´–ü—è—Ä–æ—à–Ω–∞—è¬ª –ø–æ—Å—Ç–∞—Ä–∞–µ—Ç—Å—è –≤–∞—Å –ø–æ–¥–±–æ–¥—Ä–∏—Ç—å',
                             parent_id=first_id))
        session.add(Category(id=otezd_id,
                             title='–ì—Ä–∞–º–æ—Ç–Ω—ã–π –æ—Ç—ä–µ–∑–¥',
                             is_category_screen_presented=True,
                             is_main_screen_presented=False,
                             order_index='1.5',
                             description='–û–ø–æ–∑–¥–∞–ª–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É? –ó–∞–±—ã–ª–∏ –Ω–æ—É—Ç–±—É–∫ –≤ —Ç–∞–π–ª–∞–Ω–¥–µ? –õ–µ–Ω—å –Ω–∞–ø–∏—Å–∞—Ç—å –¥–µ–ª–æ–≤–æ–µ –ø–∏—Å—å–º–æ?\n–ú—ã –ø–æ–º–æ–∂–µ–º ¬´–æ—Ç—ä–µ—Ö–∞—Ç—å¬ª —Å –ø—Ä–æ–±–ª–µ–º–∫–∏',
                             parent_id=first_id))

        session.add(Category(id=second_id,
                             title='–†–∞–±–æ—Ç–∞ —Å–æ –°–ú–ò',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2',
                             description='–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ —Å–æ–±—Ä–∞–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –Ω—É–∂–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º –ø–æ —Ä–∞–±–æ—Ç–µ —Å–æ –°–ú–ò. –ö–ª—é—á–µ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ø—Ä–∏ –æ–±—â–µ–Ω–∏–∏ —Å –∂—É—Ä–Ω–∞–ª–∏—Å—Ç–∞–º–∏: –ø—Ä–µ—Å—Å-—Ä–µ–ª–∏–∑—ã, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –∞–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏, —Ä–µ—Ä–∞–π—Ç—ã.\n–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–¥–∞—á–∏, –∫–∞–∫ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏, –µ—â–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∞, –Ω–æ –∏—Ö —Ç–æ–∂–µ –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–∞–¥–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞'))
        await session.flush()
        session.add(Category(id=prss_relise,
                             title='–ü—Ä–µ—Å—Å-–†–µ–ª–∏–∑—ã',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.1',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=comments_id,
                             title='–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.2',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=anticrisis_comments_id,
                             title='–ê–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.3',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=statyi_id,
                             title='–°—Ç–∞—Ç—å–∏',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.4',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=plan_statyi_id,
                             title='–ü–ª–∞–Ω—ã —Å—Ç–∞—Ç–µ–π',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.5',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=rewrite_id,
                             title='–†–µ—Ä–∞–π—Ç—ã',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.6',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=public_speech_id,
                             title='',
                             is_category_screen_presented=False,
                             is_main_screen_presented=False,
                             order_index='2.7',
                             description='',
                             parent_id=second_id))
        session.add(Category(id=third_id,
                             title='–†–∞–±–æ—Ç–∞ —Å —Å–æ—Ü–º–µ–¥–∏–∞',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3',
                             description=''))
        await session.flush()
        session.add(Category(id=uuid.uuid4(),
                             title='–ü–æ—Å—Ç—ã –≤ –¢–ì-–∫–∞–Ω–∞–ª',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.1',
                             description='',
                             parent_id=third_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–ü–æ—Å—Ç—ã –≤ –§–ë',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.2',
                             description='',
                             parent_id=third_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–ü–æ—Å—Ç—ã –≤ –í–ö',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.3',
                             description='',
                             parent_id=third_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–ü–æ—Å—Ç—ã –≤ Instagram',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.4',
                             description='',
                             parent_id=third_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–¢–µ–º–ø–ª–∞–Ω –¥–ª—è —Å–æ—Ü–º–µ–¥–∏–∞',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.5',
                             description='',
                             parent_id=third_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–†–∞–±–æ—Ç–∞ —Å –æ—Ç–∑—ã–≤–∞–º–∏',
                             is_main_screen_presented=False,
                             is_category_screen_presented=True,
                             order_index='3.6',
                             description='',
                             parent_id=third_id))

        session.add(Category(id=fourth_id,
                             title='–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ –∫–æ—Ä–ø–∫—É–ª—å—Ç—É—Ä–∞',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4',
                             description=''))
        await session.flush()
        session.add(Category(id=uuid.uuid4(),
                             title='–í–Ω—É—Ç—Ä–∏–∫–æ–º –†–∞—Å—Å—ã–ª–∫–∏',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4.1',
                             description='',
                             parent_id=fourth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–í–Ω—É—Ç—Ä–∏–∫–æ–º –ê–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4.2',
                             description='',
                             parent_id=fourth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ä–µ—á–∏ –¥–ª—è —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4.3',
                             description='',
                             parent_id=fourth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –í–ö',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4.4',
                             description='',
                             parent_id=fourth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–ò–¥–µ–∏ –¥–ª—è –ø–æ–¥–∞—Ä–∫–æ–≤/–º–µ—Ä—á–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='4.5',
                             description='',
                             parent_id=fourth_id))
        session.add(Category(id=fifth_id,
                             title='–ò–≤–µ–Ω—Ç—ã',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='5',
                             description=''))
        await session.flush()
        session.add(Category(id=uuid.uuid4(),
                             title='–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='5.1',
                             description='',
                             parent_id=fifth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='POS-–±—Ä–æ—à—é—Ä—ã',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='5.2',
                             description='',
                             parent_id=fifth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='—Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≤–µ–Ω—Ç–æ–≤',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='5.3',
                             description='',
                             parent_id=fifth_id))
        session.add(Category(id=uuid.uuid4(),
                             title='–¢–µ–∫—Å—Ç—ã –≤–µ–¥—É—â–∏—Ö',
                             is_main_screen_presented=False,
                             is_category_screen_presented=False,
                             order_index='5.4',
                             description='',
                             parent_id=fifth_id))
        await session.flush()

        await add_category(session, obshalka_id)
        await add_category(session, translator_id)
        await add_category(session, adecvater_id)
        await add_category(session, luchi_id)
        await add_category(session, otezd_id)
        await add_category(session, prss_relise)
        await add_category(session, comments_id)
        await add_category(session, statyi_id)
        await add_category(session, rewrite_id)
        await add_category(session, anticrisis_comments_id)
        await add_category(session, public_speech_id)


        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/1.2 –ü–µ—Ä–µ–≤–æ–¥—á–∏–∫ –°–ê–òÃÜ–¢-2.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=translator_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=translator_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/1.3 –ê–¥–µ–∫–≤–∞—Ç–∏–∑–∞—Ç–æ—Ä –°–ê–òÃÜ–¢-2.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=adecvater_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=adecvater_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/1.4 –õ—É—á–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –°–ê–òÃÜ–¢-2.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=luchi_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=luchi_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/1.5 –ì—Ä–∞–º–æ—Ç–Ω–∞—è –æ—Ç—ä–µ–∑–¥ –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=otezd_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=otezd_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.1 –ü—Ä–µ—Å—Å-—Ä–µ–ª–∏–∑—ã –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=prss_relise, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=prss_relise, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.2 –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –°–ú–ò –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=comments_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=comments_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.4 –°—Ç–∞—Ç—å–∏ –ë–ï–¢–ê-–¢–ï–°–¢ –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=statyi_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=statyi_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.6 –†–µ—Ä–∞–∏ÃÜ—Ç—ã –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.4 –°—Ç–∞—Ç—å–∏ –ë–ï–¢–ê-–¢–ï–°–¢ –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=statyi_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=statyi_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.5 –ü–ª–∞–Ω —Å—Ç–∞—Ç—å–∏ –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=plan_statyi_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=plan_statyi_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2.6 –†–µ—Ä–∞–∏ÃÜ—Ç—ã –°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=rewrite_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=rewrite_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2_3_–ê–Ω—Ç–∏–∫—Ä–∏–∑–∏—Å–Ω—ã–µ_–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏_–°–ú–ò_–°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=anticrisis_comments_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=anticrisis_comments_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])
        #
        #
        # with open('/home/vladimir/PycharmProjects/Pyaroshnaya-backend/venv/2_7_–ü—É–±–ª–∏—á–Ω—ã–µ_—Ä–µ—á–∏_–¥–ª—è_—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞_–°–ê–òÃÜ–¢.txt') as f:
        #     data = json.load(f)
        #
        # questions = data['questions']
        # session.add_all([Question(id=uuid.uuid4(), is_required=(req:=not q['question'].startswith('–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û: ')), question_text=q['question'] if req else q['question'][13:],
        #                           category_id=public_speech_id, order_index=str(i), snippet=q.get('snippet')) for i,q in enumerate(questions)])
        # prompt_texts = data['prompt'][1:]
        # session.add_all([Prompt(id=uuid.uuid4(), category_id=public_speech_id, text=prompt_text, order_index=str(i)) for i, prompt_text in enumerate(prompt_texts)])

asyncio.run(main())
